import { readFileSync } from 'fs';

// –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –º–∞–ø–ø–∏–Ω–≥–∞ ID
export function testIdMapping() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ú–ê–ü–ü–ò–ù–ì–ê ID');
  console.log('===================================');
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ backup —Ñ–∞–π–ª–∞
  const backupData = JSON.parse(readFileSync('./data/full-backup.json', 'utf-8'));
  
  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—ã —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∏–º–ø–æ—Ä—Ç–µ)
  const curatorIdMap = new Map<number, number>();
  const serverIdMap = new Map<number, number>();
  
  console.log('üìã –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó BACKUP:');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ ID –∏–∑ backup
  if (backupData.curators && backupData.curators.length > 0) {
    console.log('\nüë• –ö—É—Ä–∞—Ç–æ—Ä—ã –≤ backup:');
    backupData.curators.forEach((curator: any) => {
      console.log(`   ID: ${curator.id} -> Name: ${curator.name} (Discord: ${curator.discordId})`);
    });
  }
  
  if (backupData.discordServers && backupData.discordServers.length > 0) {
    console.log('\nüåê –°–µ—Ä–≤–µ—Ä—ã –≤ backup:');
    backupData.discordServers.forEach((server: any) => {
      console.log(`   ID: ${server.id} -> Name: ${server.name} (Server ID: ${server.serverId})`);
    });
  }
  
  console.log('\nüìä –°–í–Ø–ó–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –í BACKUP:');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤—è–∑–∏ –≤ activities
  if (backupData.activities && backupData.activities.length > 0) {
    console.log('\nüìà Activities (–ø–µ—Ä–≤—ã–µ 5):');
    backupData.activities.slice(0, 5).forEach((activity: any) => {
      console.log(`   Activity ID: ${activity.id} -> Curator ID: ${activity.curatorId}, Server ID: ${activity.serverId}`);
    });
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤—è–∑–∏ –≤ task reports
  if (backupData.taskReports && backupData.taskReports.length > 0) {
    console.log('\nüìã Task Reports:');
    backupData.taskReports.forEach((task: any) => {
      console.log(`   Task ID: ${task.id} -> Curator ID: ${task.curatorId}, Server ID: ${task.serverId}`);
    });
  }
  
  console.log('\nüîß –°–ò–°–¢–ï–ú–ê –ú–ê–ü–ü–ò–ù–ì–ê:');
  console.log('–ü—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è:');
  console.log('- curatorIdMap: backup_curator_id -> database_curator_id');
  console.log('- serverIdMap: backup_server_id -> database_server_id');
  console.log('\n–≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–≤—è–∑–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  
  console.log('\n‚úÖ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´:');
  console.log('1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∏ –Ω–æ–≤—ã—Ö ID');
  console.log('2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏');
  console.log('3. –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤');
  console.log('4. –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º —Å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ–º ID');
  console.log('5. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  testIdMapping();
}